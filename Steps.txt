Steps to test/demo custom YOLO for 27 ASL objects on Nvidia Jetson Nano

1.	update Linux for Tegra aka L4T:

	sudo apt-get update

2: 	assign environment variables; Jetpack 4.2.1 selected for CUDA 10; so, please specify that here:

	export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
	export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

3.	clone Steve Depp’s YOLO_ASL:

	git clone https://github.com/AlexeyAB/darknet.git

4.	build:

	make

5. 	run it on a video; escape key to exit this:

	./darknet detector demo build/darknet/x64/data/obj.data cfg/yolo-obj.cfg yolo-obj_16000.weights data/ASLAZ.mov -i 0 -thresh 0.25

9.	run it live; escape key to exit this:

./darknet detector demo build/darknet/x64/data/obj.data cfg/yolo-obj.cfg yolo-obj_16000.weights "nvarguscamerasrc auto-exposure=1 ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=2 ! video/x-raw, width=(int)1280, height=(int)720, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink -e"

Steps to test/demo YOLO for 80 COCO objects on Nvidia Jetson Nano

1.	update Linux for Tegra aka L4T:

	sudo apt-get update

2: 	environment variables
	Jetpack 4.2.1 selected for CUDA 10; so, please specify that here:

	export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
	export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

3.	JP Redmond aka “reddie”, created YOLO, but has retired from CV.
	AlexeyAB just published yolo4:

	git clone https://github.com/AlexeyAB/darknet.git

4.	Use reddie's weights: tiny is faster but less accurate:

	cd darknet
	wget https://pjreddie.com/media/files/yolov3.weights
	wget https://pjreddie.com/media/files/yolov3-tiny.weights

6.	edit 3 lines of Makefile via nano:

	sudo apt install nano
	nano Makefile
		GPU=1
		CUDNN=1
		OPENCV=1

7. 	build:

	make

8. 	run it on videos

	./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights data/test50.mp4 -i 0 -thresh 0.25

	./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights data/test52.mp4 -i 0 -thresh 0.25

9.	run it live upside down to see poor detection; escape key to exit this

./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights "nvarguscamerasrc auto-exposure=1 ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=0 ! video/x-raw, width=(int)1280, height=(int)720, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink -e"

10.	edit: flip-method=2
	run it live; escape key to exit this

./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights "nvarguscamerasrc auto-exposure=1 ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, format=(string)NV12, framerate=(fraction)60/1 ! nvvidconv flip-method=2 ! video/x-raw, width=(int)1280, height=(int)720, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink -e"